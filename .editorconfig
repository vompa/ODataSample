########################################################################################################################
# Core EditorConfig Options                                                                                            #
# To learn more about .editorconfig see https://aka.ms/editorconfigdocs                                                #
# EditorConfig is awesome: https://EditorConfig.org                                                                    #
########################################################################################################################
# Remove the line below if you want to inherit .editorconfig settings from higher directories
root = true

# All files
[*]
# Indentation and spacing
indent_style = tab
# New line preferences
end_of_line = crlf
insert_final_newline = true

# Code files
[*.{cs,csx,vb,vbx}]
charset = utf-8-bom

# XML files
[*.xml]
indent_style = space
indent_size = 2

# XML project files
[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,projitems,shproj}]
indent_style = space
indent_size = 2

# XML config files
[*.{props,targets,ruleset,config,nuspec,resx,vsixmanifest,vsct}]
indent_style = space
indent_size = 2

########################################################################################################################
# .NET Coding Conventions                                                                                              #
########################################################################################################################
[*.{cs,vb}]
########################################################################################################################
# Compiler Warnings                                                                                                    #
########################################################################################################################
dotnet_diagnostic.CS1591.severity = none
dotnet_diagnostic.CS1573.severity = none


########################################################################################################################
# Code quality rules                                                                                                   #
# https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/                                          #
########################################################################################################################

########################################################################################################################
# Code quality rules - Design rules                                                                                    #
# https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/design-warnings                           #
########################################################################################################################
# CA1000: Do not declare static members on generic types https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1000
dotnet_diagnostic.CA1000.severity = warning

# CA1001: Types that own disposable fields should be disposable https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1001
dotnet_diagnostic.CA1001.severity = warning

# CA1002: Do not expose generic lists https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1002
dotnet_diagnostic.CA1002.severity = none

# CA1003: Use generic event handler instances https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1003
dotnet_diagnostic.CA1003.severity = none

# CA1005: Avoid excessive parameters on generic types https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1005
dotnet_diagnostic.CA1005.severity = none

# CA1008: Enums should have zero value https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1008
dotnet_diagnostic.CA1008.severity = none

# CA1010: Collections should implement generic interface https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1010
dotnet_diagnostic.CA1010.severity = warning

# CA1012: Abstract types should not have constructors https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1012
dotnet_diagnostic.CA1012.severity = suggestion

# CA1014: Mark assemblies with CLSCompliantAttribute https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1014
dotnet_diagnostic.CA1014.severity = none

# CA1016: Mark assemblies with AssemblyVersionAttribute https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1016
dotnet_diagnostic.CA1016.severity = warning

# CA1017: Mark assemblies with ComVisibleAttribute https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1017
dotnet_diagnostic.CA1017.severity = none

# CA1018: Mark attributes with AttributeUsageAttribute https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1018
dotnet_diagnostic.CA1018.severity = warning

# CA1019: Define accessors for attribute arguments https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1019
dotnet_diagnostic.CA1019.severity = none

# CA1021: Avoid out parameters https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1021
dotnet_diagnostic.CA1021.severity = none

# CA1024: Use properties where appropriate https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1024
dotnet_diagnostic.CA1024.severity = none

# CA1027: Mark enums with FlagsAttribute https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1027
dotnet_diagnostic.CA1027.severity = none

# CA1028: Enum storage should be Int32 https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1028
dotnet_diagnostic.CA1028.severity = warning

# CA1030: Use events where appropriate https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1030
dotnet_diagnostic.CA1030.severity = none

# CA1031: Do not catch general exception types https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1031
dotnet_diagnostic.CA1031.severity = suggestion

# CA1032: Implement standard exception constructors https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1032
dotnet_diagnostic.CA1032.severity = suggestion

# CA1033: Interface methods should be callable by child types https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1033
dotnet_diagnostic.CA1033.severity = warning

# CA1034: Nested types should not be visible https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1034
dotnet_diagnostic.CA1034.severity = suggestion

# CA1036: Override methods on comparable types https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1036
dotnet_diagnostic.CA1036.severity = warning

# CA1040: Avoid empty interfaces https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1040
dotnet_diagnostic.CA1040.severity = none

# CA1041: Provide ObsoleteAttribute message https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1041
dotnet_diagnostic.CA1041.severity = warning

# CA1043: Use integral or string argument for indexers https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1043
dotnet_diagnostic.CA1043.severity = none

# CA1044: Properties should not be write only https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1044
dotnet_diagnostic.CA1044.severity = none

# CA1045: Do not pass types by reference https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1045
dotnet_diagnostic.CA1045.severity = none

# CA1046: Do not overload operator equals on reference types https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1046
dotnet_diagnostic.CA1046.severity = none

# CA1047: Do not declare protected members in sealed types https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1047
dotnet_diagnostic.CA1047.severity = suggestion

# CA1050: Declare types in namespaces https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1050
dotnet_diagnostic.CA1050.severity = warning

# CA1051: Do not declare visible instance fields https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1051
dotnet_diagnostic.CA1051.severity = warning

# CA1052: Static holder types should be Static or NotInheritable https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1052
dotnet_diagnostic.CA1052.severity = warning

# CA1054: URI parameters should not be strings https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1054
dotnet_diagnostic.CA1054.severity = warning

# CA1055: URI return values should not be strings https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1055
dotnet_diagnostic.CA1055.severity = warning

# CA1056: URI properties should not be strings https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1056
dotnet_diagnostic.CA1056.severity = warning

# CA1058: Types should not extend certain base types https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1058
dotnet_diagnostic.CA1058.severity = warning

# CA1060: Move P/Invokes to NativeMethods class https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1060
dotnet_diagnostic.CA1060.severity = warning

# CA1061: Do not hide base class methods https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1061
dotnet_diagnostic.CA1061.severity = warning

# CA1062: Validate arguments of public methods https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1062
dotnet_diagnostic.CA1062.severity = suggestion
dotnet_code_quality.CA1062.exclude_extension_method_this_parameter = true

# CA1063: Implement IDisposable correctly https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1063
dotnet_diagnostic.CA1063.severity = warning

# CA1064: Exceptions should be public https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1064
dotnet_diagnostic.CA1064.severity = suggestion

# CA1065: Do not raise exceptions in unexpected locations https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1065
dotnet_diagnostic.CA1065.severity = warning

# CA1066: Implement IEquatable when overriding Equals https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1066
dotnet_diagnostic.CA1066.severity = warning

# CA1067: Override Equals when implementing IEquatable https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1067
dotnet_diagnostic.CA1067.severity = warning

# CA1068: CancellationToken parameters must come last https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1068
dotnet_diagnostic.CA1068.severity = suggestion

# CA1069: Enums should not have duplicate values https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1069
dotnet_diagnostic.CA1069.severity = warning

# CA1070: Do not declare event fields as virtual https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1070
dotnet_diagnostic.CA1070.severity = suggestion

########################################################################################################################
# Code quality rules - Documentation rules                                                                             #
# https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/documentation-warnings                    #
########################################################################################################################
# CA1200: Avoid using cref tags with a prefix https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1200
dotnet_diagnostic.CA1200.severity = silent

########################################################################################################################
# Code quality rules - Globalization rules                                                                             #
# https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/globalization-warnings                    #
########################################################################################################################
# CA1303: Do not pass literals as localized parameters https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1303
dotnet_diagnostic.CA1303.severity = none

# CA1304: Specify CultureInfo https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1304
dotnet_diagnostic.CA1304.severity = suggestion

# CA1305: Specify IFormatProvider https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1305
dotnet_diagnostic.CA1305.severity = suggestion

# CA1307: Specify StringComparison for clarity https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1307
dotnet_diagnostic.CA1307.severity = none

# CA1308: Normalize strings to uppercase https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1308
dotnet_diagnostic.CA1308.severity = warning

# CA1309: Use ordinal StringComparison https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1309
dotnet_diagnostic.CA1309.severity = silent

# CA1310: Specify StringComparison for correctness https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1310
dotnet_diagnostic.CA1310.severity = silent

# CA2101: Specify marshaling for P/Invoke string arguments https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2101
dotnet_diagnostic.CA2101.severity = warning

########################################################################################################################
# Code quality rules - Portability and interoperability rules                                                          #
# https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/interoperability-warnings                 #
########################################################################################################################
# CA1401: P/Invokes should not be visible https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1401
dotnet_diagnostic.CA1401.severity = warning

# CA1416: Validate platform compatibility https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1416
dotnet_diagnostic.CA1416.severity = warning

# CA1417: Do not use OutAttribute on string parameters for P/Invokes https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1417
dotnet_diagnostic.CA1417.severity = warning

########################################################################################################################
# Code quality rules - Maintainability rules                                                                           #
# https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/maintainability-warnings                  #
########################################################################################################################
# CA1501: Avoid excessive inheritance https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1501
dotnet_diagnostic.CA1501.severity = none

# CA1502: Avoid excessive complexity https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1502
dotnet_diagnostic.CA1502.severity = none

# CA1505: Avoid unmaintainable code https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1505
dotnet_diagnostic.CA1505.severity = none

# CA1506: Avoid excessive class coupling https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1506
dotnet_diagnostic.CA1506.severity = none

# CA1507: Use nameof in place of string https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1507
dotnet_diagnostic.CA1507.severity = warning

# CA1508: Avoid dead conditional code https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1508
dotnet_diagnostic.CA1508.severity = none

# CA1509: Invalid entry in code metrics configuration file https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1509
dotnet_diagnostic.CA1509.severity = none

########################################################################################################################
# Code quality rules - Naming rules                                                                                    #
# https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/naming-warnings                           #
########################################################################################################################
# CA1700: Do not name enum values 'Reserved' https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1700
dotnet_diagnostic.CA1700.severity = none

# CA1707: Identifiers should not contain underscores https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1707
dotnet_diagnostic.CA1707.severity = error

# CA1708: Identifiers should differ by more than case https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1708
dotnet_diagnostic.CA1708.severity = silent

# CA1710: Identifiers should have correct suffix https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1710
dotnet_diagnostic.CA1710.severity = warning

# CA1711: Identifiers should not have incorrect suffix https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1711
dotnet_diagnostic.CA1711.severity = warning

# CA1712: Do not prefix enum values with type name https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1712
dotnet_diagnostic.CA1712.severity = warning

# CA1713: Events should not have before or after prefix https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1713
dotnet_diagnostic.CA1713.severity = warning

# CA1714: Flags enums should have plural names https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1714
dotnet_diagnostic.CA1714.severity = none

# CA1715: Identifiers should have correct prefix https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1715
dotnet_diagnostic.CA1715.severity = warning

# CA1716: Identifiers should not match keywords https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1716
dotnet_diagnostic.CA1716.severity = none

# CA1717: Only FlagsAttribute enums should have plural names https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1717
dotnet_diagnostic.CA1717.severity = none

# CA1720: Identifiers should not contain type names https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1720
dotnet_diagnostic.CA1720.severity = silent

# CA1721: Property names should not match get methods https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1721
dotnet_diagnostic.CA1721.severity = none

# CA1724: Type names should not match namespaces https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1724
dotnet_diagnostic.CA1724.severity = none

# CA1725: Parameter names should match base declaration https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1725
dotnet_diagnostic.CA1725.severity = suggestion

########################################################################################################################
# Code quality rules - Performance rules                                                                               #
# https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/performance-warnings                      #
########################################################################################################################
# CA1802: Use Literals Where Appropriate https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1802
dotnet_diagnostic.CA1802.severity = suggestion

# CA1805: Do not initialize unnecessarily. https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1805
dotnet_diagnostic.CA1805.severity = suggestion

# CA1806: Do not ignore method results https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1806
dotnet_diagnostic.CA1806.severity = suggestion

# CA1810: Initialize reference type static fields inline https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1810
dotnet_diagnostic.CA1810.severity = suggestion

# CA1812: Avoid uninstantiated internal classes https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1812
dotnet_diagnostic.CA1812.severity = none

# CA1813: Avoid unsealed attributes https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1813
dotnet_diagnostic.CA1813.severity = suggestion

# CA1814: Prefer jagged arrays over multidimensional https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1814
dotnet_diagnostic.CA1814.severity = none

# CA1815: Override equals and operator equals on value types https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1815
dotnet_diagnostic.CA1815.severity = suggestion

# CA1819: Properties should not return arrays https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1819
dotnet_diagnostic.CA1819.severity = warning

# CA1820: Test for empty strings using string length https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1820
dotnet_diagnostic.CA1820.severity = warning

# CA1821: Remove empty finalizers https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1821
dotnet_diagnostic.CA1821.severity = warning

# CA1822: Mark members as static https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1822
dotnet_diagnostic.CA1822.severity = error

# CA1823: Avoid unused private fields https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1823
dotnet_diagnostic.CA1823.severity = suggestion

# CA1824: Mark assemblies with NeutralResourcesLanguageAttribute https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1824
dotnet_diagnostic.CA1824.severity = suggestion

# CA1825: Avoid zero-length array allocations https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1825
dotnet_diagnostic.CA1825.severity = suggestion

# CA1826: Use property instead of Linq Enumerable method https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1826
dotnet_diagnostic.CA1826.severity = suggestion

# CA1827: Do not use Count/LongCount when Any can be used https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1827
dotnet_diagnostic.CA1827.severity = warning

# CA1828: Do not use CountAsync/LongCountAsync when AnyAsync can be used https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1828
dotnet_diagnostic.CA1828.severity = warning

# CA1829: Use Length/Count property instead of Enumerable.Count method https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1829
dotnet_diagnostic.CA1829.severity = warning

# CA1830: Prefer strongly-typed Append and Insert method overloads on StringBuilder. https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1830
dotnet_diagnostic.CA1830.severity = suggestion

# CA1831: Use AsSpan instead of Range-based indexers for string when appropriate https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1831
dotnet_diagnostic.CA1831.severity = warning

# CA1832: Use AsSpan or AsMemory instead of Range-based indexers for getting ReadOnlySpan or ReadOnlyMemory portion of an array https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1832
dotnet_diagnostic.CA1832.severity = suggestion

# CA1833: Use AsSpan or AsMemory instead of Range-based indexers for getting Span or Memory portion of an array https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1833
dotnet_diagnostic.CA1833.severity = suggestion

# CA1834: Use StringBuilder.Append(char) for single character strings https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1834
dotnet_diagnostic.CA1834.severity = suggestion

# CA1835: Prefer the memory-based overloads of ReadAsync/WriteAsync methods in stream-based classes https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1835
dotnet_diagnostic.CA1835.severity = suggestion

# CA1836: Prefer IsEmpty over Count when available https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1836
dotnet_diagnostic.CA1836.severity = warning

# CA1837: Use Environment.ProcessId instead of Process.GetCurrentProcess().Id https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1837
dotnet_diagnostic.CA1837.severity = suggestion

# CA1838: Avoid StringBuilder parameters for P/Invokes https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1838
dotnet_diagnostic.CA1838.severity = silent

########################################################################################################################
# Code quality rules - Publish rules                                                                                   #
# https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/publish-warnings                          #
########################################################################################################################
# IL3000: Avoid accessing Assembly file path when publishing as a single file https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/il3000
dotnet_diagnostic.IL3000.severity = warning

# IL3001: Avoid accessing Assembly file path when publishing as a single file https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/il3001
dotnet_diagnostic.IL3001.severity = warning

########################################################################################################################
# Code quality rules - Reliability rules                                                                               #
# https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/reliability-warnings                      #
########################################################################################################################
# CA2000: Dispose objects before losing scope https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2000
dotnet_diagnostic.CA2000.severity = warning

# CA2002: Do not lock on objects with weak identity https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2002
dotnet_diagnostic.CA2002.severity = warning

# CA2007: Do not directly await a Task https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2007
dotnet_diagnostic.CA2007.severity = none

# CA2008: Do not create tasks without passing a TaskScheduler https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2008
dotnet_diagnostic.CA2008.severity = none

# CA2009: Do not call ToImmutableCollection on an ImmutableCollection value https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2009
dotnet_diagnostic.CA2009.severity = suggestion

# CA2011: Do not assign property within its setter https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2011
dotnet_diagnostic.CA2011.severity = suggestion

# CA2012: Use ValueTasks correctly https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2012
dotnet_diagnostic.CA2012.severity = suggestion

# CA2013: Do not use ReferenceEquals with value types https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2013
dotnet_diagnostic.CA2013.severity = warning

# CA2014: Do not use stackalloc in loops https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2014
dotnet_diagnostic.CA2014.severity = warning

# CA2015: Do not define finalizers for types derived from MemoryManager<T> https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2015
dotnet_diagnostic.CA2015.severity = warning

# CA2016: Forward the CancellationToken parameter to methods that take one https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2016
dotnet_diagnostic.CA2016.severity = suggestion

########################################################################################################################
# Code quality rules - Security rules                                                                                  #
# https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/security-warnings                         #
########################################################################################################################
# CA2100: Review SQL queries for security vulnerabilities https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2100
dotnet_diagnostic.CA2100.severity = warning

# CA2109: Review visible event handlers https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2109
dotnet_diagnostic.CA2109.severity = none

# CA2119: Seal methods that satisfy private interfaces https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2119
dotnet_diagnostic.CA2119.severity = none

# CA2153: Avoid handling Corrupted State Exceptions https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2153
dotnet_diagnostic.CA2153.severity = none

# CA2300: Do not use insecure deserializer BinaryFormatter https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2300
dotnet_diagnostic.CA2300.severity = none

# CA2301: Do not call BinaryFormatter.Deserialize without first setting BinaryFormatter.Binder https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2301
dotnet_diagnostic.CA2301.severity = none

# CA2302: Ensure BinaryFormatter.Binder is set before calling BinaryFormatter.Deserialize https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2302
dotnet_diagnostic.CA2302.severity = none

# CA2305: Do not use insecure deserializer LosFormatter https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2305
dotnet_diagnostic.CA2305.severity = none

# CA2310: Do not use insecure deserializer NetDataContractSerializer https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2310
dotnet_diagnostic.CA2310.severity = none

# CA2311: Do not deserialize without first setting NetDataContractSerializer.Binder https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2311
dotnet_diagnostic.CA2311.severity = none

# CA2312: Ensure NetDataContractSerializer.Binder is set before deserializing https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2312
dotnet_diagnostic.CA2312.severity = none

# CA2315: Do not use insecure deserializer ObjectStateFormatter https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2315
dotnet_diagnostic.CA2315.severity = none

# CA2321: Do not deserialize with JavaScriptSerializer using a SimpleTypeResolver https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2321
dotnet_diagnostic.CA2321.severity = none

# CA2322: Ensure JavaScriptSerializer is not initialized with SimpleTypeResolver before deserializing https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2322
dotnet_diagnostic.CA2322.severity = none

# CA2326: Do not use TypeNameHandling values other than None https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2326
dotnet_diagnostic.CA2326.severity = none

# CA2327: Do not use insecure JsonSerializerSettings https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2327
dotnet_diagnostic.CA2327.severity = none

# CA2328: Ensure that JsonSerializerSettings are secure https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2328
dotnet_diagnostic.CA2328.severity = none

# CA2329: Do not deserialize with JsonSerializer using an insecure configuration https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2329
dotnet_diagnostic.CA2329.severity = none

# CA2330: Ensure that JsonSerializer has a secure configuration when deserializing https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2330
dotnet_diagnostic.CA2330.severity = none

# CA2350: Ensure DataTable.ReadXml()'s input is trusted https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2350
dotnet_diagnostic.CA2350.severity = none

# CA2351: Ensure DataSet.ReadXml()'s input is trusted https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2351
dotnet_diagnostic.CA2351.severity = none

# CA2352: Unsafe DataSet or DataTable in serializable type can be vulnerable to remote code execution attacks https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2352
dotnet_diagnostic.CA2352.severity = none

# CA2353: Unsafe DataSet or DataTable in serializable type https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2353
dotnet_diagnostic.CA2353.severity = none

# CA2354: Unsafe DataSet or DataTable in deserialized object graph can be vulnerable to remote code execution attack https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2354
dotnet_diagnostic.CA2354.severity = none

# CA2355: Unsafe DataSet or DataTable in deserialized object graph https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2355
dotnet_diagnostic.CA2355.severity = none

# CA2356: Unsafe DataSet or DataTable type in web deserialized object graph https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2356
dotnet_diagnostic.CA2356.severity = none

# CA2361: Ensure autogenerated class containing DataSet.ReadXml() is not used with untrusted data https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2361
dotnet_diagnostic.CA2361.severity = none

# CA2362: Unsafe DataSet or DataTable in autogenerated serializable type can be vulnerable to remote code execution attacks https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2362
dotnet_diagnostic.CA2362.severity = none

# CA3001: Review code for SQL injection vulnerabilities https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca3001
dotnet_diagnostic.CA3001.severity = warning

# CA3002: Review code for XSS vulnerabilities https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca3002
dotnet_diagnostic.CA3002.severity = warning

# CA3003: Review code for file path injection vulnerabilities https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca3003
dotnet_diagnostic.CA3003.severity = warning

# CA3004: Review code for information disclosure vulnerabilities https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca3004
dotnet_diagnostic.CA3004.severity = warning

# CA3005: Review code for LDAP injection vulnerabilities https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca3005
dotnet_diagnostic.CA3005.severity = warning

# CA3006: Review code for process command injection vulnerabilities https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca3006
dotnet_diagnostic.CA3006.severity = warning

# CA3007: Review code for open redirect vulnerabilities https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca3007
dotnet_diagnostic.CA3007.severity = warning

# CA3008: Review code for XPath injection vulnerabilities https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca3008
dotnet_diagnostic.CA3008.severity = warning

# CA3009: Review code for XML injection vulnerabilities https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca3009
dotnet_diagnostic.CA3009.severity = warning

# CA3010: Review code for XAML injection vulnerabilities https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca3010
dotnet_diagnostic.CA3010.severity = warning

# CA3011: Review code for DLL injection vulnerabilities https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca3011
dotnet_diagnostic.CA3011.severity = warning

# CA3012: Review code for regex injection vulnerabilities https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca3012
dotnet_diagnostic.CA3012.severity = warning

# CA3061: Do not add schema by URL https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca3061
dotnet_diagnostic.CA3061.severity = silent

# CA3075: Insecure DTD Processing https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca3075
dotnet_diagnostic.CA3075.severity = silent

# CA3076: Insecure XSLT Script Execution https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca3076
dotnet_diagnostic.CA3076.severity = silent

# CA3077: Insecure Processing in API Design, XML Document and XML Text Reader https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca3077
dotnet_diagnostic.CA3077.severity = silent

# CA3147: Mark verb handlers with ValidateAntiForgeryToken https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca3147
dotnet_diagnostic.CA3147.severity = suggestion

# CA5350: Do Not Use Weak Cryptographic Algorithms https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5350
dotnet_diagnostic.CA5350.severity = warning

# CA5351 Do Not Use Broken Cryptographic Algorithms https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5351
dotnet_diagnostic.CA5351.severity = warning

# CA5358: Do Not Use Unsafe Cipher Modes https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5358
dotnet_diagnostic.CA5358.severity = warning

# CA5359: Do not disable certificate validation https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5359
dotnet_diagnostic.CA5359.severity = warning

# CA5360: Do not call dangerous methods in deserialization https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5360
dotnet_diagnostic.CA5360.severity = silent

# CA5361: Do not disable SChannel use of strong crypto https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5361
dotnet_diagnostic.CA5361.severity = none

# CA5362: Potential reference cycle in deserialized object graph https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5362
dotnet_diagnostic.CA5362.severity = none

# CA5363: Do not disable request validation https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5363
dotnet_diagnostic.CA5363.severity = silent

# CA5364: Do not use deprecated security protocols https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5364
dotnet_diagnostic.CA5364.severity = warning

# CA5365: Do Not Disable HTTP Header Checking https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5365
dotnet_diagnostic.CA5365.severity = warning

# CA5366: Use XmlReader For DataSet Read XML https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5366
dotnet_diagnostic.CA5366.severity = silent

# CA5367: Do not serialize types with pointer fields https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5367
dotnet_diagnostic.CA5367.severity = none

# CA5368: Set ViewStateUserKey For Classes Derived From Page https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5368
dotnet_diagnostic.CA5368.severity = silent

# CA5369: Use XmlReader for Deserialize https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5369
dotnet_diagnostic.CA5369.severity = silent

# CA5370: Use XmlReader for validating reader https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5370
dotnet_diagnostic.CA5370.severity = silent

# CA5371: Use XmlReader for schema read https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5371
dotnet_diagnostic.CA5371.severity = silent

# CA5372: Use XmlReader for XPathDocument https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5372
dotnet_diagnostic.CA5372.severity = silent

# CA5373: Do not use obsolete key derivation function https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5373
dotnet_diagnostic.CA5373.severity = warning

# CA5374: Do not use XslTransform https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5374
dotnet_diagnostic.CA5374.severity = silent

# CA5375: Do not use account shared access signature https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5375
dotnet_diagnostic.CA5375.severity = warning

# CA5376: Use SharedAccessProtocol HttpsOnly https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5376
dotnet_diagnostic.CA5376.severity = warning

# CA5377: Use container level access policy https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5377
dotnet_diagnostic.CA5377.severity = warning

# CA5378: Do not disable ServicePointManagerSecurityProtocols https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5378
dotnet_diagnostic.CA5378.severity = none

# CA5379: Ensure key derivation function algorithm is sufficiently strong https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5379
dotnet_diagnostic.CA5379.severity = warning

# CA5380: Do not add certificates to root store https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5380
dotnet_diagnostic.CA5380.severity = none

# CA5381: Ensure certificates are not added to root store https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5381
dotnet_diagnostic.CA5381.severity = none

# CA5382: Use secure cookies in ASP.NET Core https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5382
dotnet_diagnostic.CA5382.severity = none

# CA5383: Ensure use secure cookies in ASP.NET Core https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5383
dotnet_diagnostic.CA5383.severity = none

# CA5384: Do not use digital signature algorithm (DSA) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5384
dotnet_diagnostic.CA5384.severity = warning

# CA5385: Use Rivest–Shamir–Adleman (RSA) algorithm with sufficient key size https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5385
dotnet_diagnostic.CA5385.severity = warning

# CA5386: Avoid hardcoding SecurityProtocolType value https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5386
dotnet_diagnostic.CA5386.severity = none

# CA5387: Do not use weak key derivation function with insufficient iteration count https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5387
dotnet_diagnostic.CA5387.severity = none

# CA5388: Ensure sufficient iteration count when using weak key derivation function https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5388
dotnet_diagnostic.CA5388.severity = none

# CA5389: Do not add archive item's path to the target file system path https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5389
dotnet_diagnostic.CA5389.severity = none

# CA5390: Do not hard-code encryption key https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5390
dotnet_diagnostic.CA5390.severity = suggestion

# CA5391: Use antiforgery tokens in ASP.NET Core MVC controllers https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5391
dotnet_diagnostic.CA5391.severity = suggestion

# CA5392: Use DefaultDllImportSearchPaths attribute for P/Invokes https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5392
dotnet_diagnostic.CA5392.severity = none

# CA5393: Do not use unsafe DllImportSearchPath value https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5393
dotnet_diagnostic.CA5393.severity = none

# CA5394: Do not use insecure randomness https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5394
dotnet_diagnostic.CA5394.severity = suggestion

# CA5395: Miss HttpVerb attribute for action methods https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5395
dotnet_diagnostic.CA5395.severity = suggestion

# CA5396: Set HttpOnly to true for HttpCookie https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5396
dotnet_diagnostic.CA5396.severity = none

# CA5397: Do not use deprecated SslProtocols values https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5397
dotnet_diagnostic.CA5397.severity = warning

# CA5398: Avoid hardcoded SslProtocols values https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5398
dotnet_diagnostic.CA5398.severity = none

# CA5399: Definitely disable HttpClient certificate revocation list check https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5399
dotnet_diagnostic.CA5399.severity = none

# CA5400: Ensure HttpClient certificate revocation list check is not disabled https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5400
dotnet_diagnostic.CA5400.severity = none

# CA5401: Do not use CreateEncryptor with non-default IV https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5401
dotnet_diagnostic.CA5401.severity = none

# CA5402: Use CreateEncryptor with the default IV https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5402
dotnet_diagnostic.CA5402.severity = none

# CA5403: Do not hard-code certificate https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca5403
dotnet_diagnostic.CA5403.severity = none

########################################################################################################################
# Code quality rules - Usage rules                                                                                     #
# https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/usage-warnings                            #
########################################################################################################################
# CA1801: Review unused parameters https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1801
dotnet_diagnostic.CA1801.severity = warning

# CA1816: Call GC.SuppressFinalize correctly https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1816
dotnet_diagnostic.CA1816.severity = warning

# CA2200: Rethrow to preserve stack details https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2200
dotnet_diagnostic.CA2200.severity = warning

# CA2201: Do not raise reserved exception types https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2201
dotnet_diagnostic.CA2201.severity = silent

# CA2207: Initialize value type static fields inline https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2207
dotnet_diagnostic.CA2207.severity = warning

# CA2208: Instantiate argument exceptions correctly https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2208
dotnet_diagnostic.CA2208.severity = error

# CA2211: Non-constant fields should not be visible https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2211
dotnet_diagnostic.CA2211.severity = warning

# CA2213: Disposable fields should be disposed https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2213
dotnet_diagnostic.CA2213.severity = warning

# CA2214: Do not call overridable methods in constructors https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2214
dotnet_diagnostic.CA2214.severity = warning

# CA2215: Dispose methods should call base class dispose https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2215
dotnet_diagnostic.CA2215.severity = warning

# CA2216: Disposable types should declare finalizer https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2216
dotnet_diagnostic.CA2216.severity = warning

# CA2217: Do not mark enums with FlagsAttribute https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2217
dotnet_diagnostic.CA2217.severity = none

# CA2218: Override GetHashCode on overriding Equals https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2218
dotnet_diagnostic.CA2218.severity = none

# CA2219: Do not raise exceptions in exception clauses https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2219
dotnet_diagnostic.CA2219.severity = warning

# CA2224: Override Equals on overloading operator equals https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2224
dotnet_diagnostic.CA2224.severity = none

# CA2225: Operator overloads have named alternates https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2225
dotnet_diagnostic.CA2225.severity = suggestion

# CA2226: Operators should have symmetrical overloads https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2226
dotnet_diagnostic.CA2226.severity = suggestion

# CA2227: Collection properties should be read only https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2227
dotnet_diagnostic.CA2227.severity = none

# CA2229: Implement serialization constructors https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2229
dotnet_diagnostic.CA2229.severity = warning

# CA2231: Overload operator equals on overriding ValueType.Equals https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2231
dotnet_diagnostic.CA2231.severity = warning

# CA2234: Pass System.Uri objects instead of strings https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2234
dotnet_diagnostic.CA2234.severity = warning

# CA2235: Mark all non-serializable fields https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2235
dotnet_diagnostic.CA2235.severity = warning

# CA2237: Mark ISerializable types with SerializableAttribute https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2237
dotnet_diagnostic.CA2237.severity = warning

# CA2241: Provide correct arguments to formatting methods https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2241
dotnet_diagnostic.CA2241.severity = warning

# CA2242: Test for NaN correctly https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2242
dotnet_diagnostic.CA2242.severity = warning

# CA2243: Attribute string literals should parse correctly https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2243
dotnet_diagnostic.CA2243.severity = none

# CA2244: Do not duplicate indexed element initializations https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2244
dotnet_diagnostic.CA2244.severity = warning

# CA2245: Do not assign a property to itself https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2245
dotnet_diagnostic.CA2245.severity = warning

# CA2246: Do not assign a symbol and its member in the same statement https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2246
dotnet_diagnostic.CA2246.severity = warning

# CA2247: Argument passed to TaskCompletionSource constructor should be TaskCreationOptions enum instead of TaskContinuationOptions enum https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2247
dotnet_diagnostic.CA2247.severity = warning

# CA2248: Provide correct enum argument to Enum.HasFlag https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2248
dotnet_diagnostic.CA2248.severity = warning

# CA2249: Consider using String.Contains instead of String.IndexOf https://docs.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2249
dotnet_diagnostic.CA2249.severity = suggestion

########################################################################################################################
# Code style rules                                                                                                     #
# https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/                                            #
########################################################################################################################

########################################################################################################################
# Code style rules - Language rules                                                                                    #
# https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/language-rules                              #
########################################################################################################################
# this and Me preferences (IDE0003 and IDE0009) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0003-ide0009
dotnet_style_qualification_for_field = false
dotnet_style_qualification_for_property = false
dotnet_style_qualification_for_method = false
dotnet_style_qualification_for_event = false
dotnet_diagnostic.IDE0003.severity = error
dotnet_diagnostic.IDE0009.severity = none

# Use language keywords instead of framework type names for type references (IDE0049) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0049
dotnet_style_predefined_type_for_locals_parameters_members = true
dotnet_style_predefined_type_for_member_access = true
dotnet_diagnostic.IDE0049.severity = error

# Code style rules - Parentheses preferences (IDE0047 and IDE0048) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0047-ide0048
dotnet_style_parentheses_in_arithmetic_binary_operators = never_if_unnecessary
dotnet_style_parentheses_in_relational_binary_operators = never_if_unnecessary
dotnet_style_parentheses_in_other_binary_operators = never_if_unnecessary
dotnet_style_parentheses_in_other_operators = never_if_unnecessary
dotnet_diagnostic.IDE0047.severity = suggestion
dotnet_diagnostic.IDE0048.severity = suggestion

# Require file header (IDE0073) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0073
file_header_template = unset

########################################################################################################################
# Code style rules - Language rules - Modifier preferences                                                             #
# https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/modifier-preferences                        #
########################################################################################################################
# Add accessibility modifiers (IDE0040) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0040
dotnet_style_require_accessibility_modifiers = for_non_interface_members
dotnet_diagnostic.IDE0040.severity = suggestion

# Add readonly modifier (IDE0044) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0044
dotnet_style_readonly_field = true
dotnet_diagnostic.IDE0044.severity = suggestion

# Make struct fields writable (IDE0064) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0064
dotnet_diagnostic.IDE0064.severity = suggestion

########################################################################################################################
# Code style rules - Language rules - Expression-level preferences                                                     #
# https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/expression-level-preferences               #
########################################################################################################################
# Add missing cases to switch statement (IDE0010) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0010
dotnet_diagnostic.IDE0010.severity = silent

# Use object initializers (IDE0017) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0017
dotnet_style_object_initializer = true
dotnet_diagnostic.IDE0017.severity = suggestion

# Use collection initializers (IDE0028) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0028
dotnet_style_collection_initializer = true
dotnet_diagnostic.IDE0028.severity = suggestion

# Use auto property (IDE0032) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0032
dotnet_style_prefer_auto_properties = true
dotnet_diagnostic.IDE0032.severity = suggestion

# Use explicitly provided tuple name (IDE0033) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0033
dotnet_style_explicit_tuple_names = true
dotnet_diagnostic.IDE0033.severity = suggestion

# Use inferred member name (IDE0037) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0037
dotnet_style_prefer_inferred_tuple_names = true
dotnet_style_prefer_inferred_anonymous_type_member_names = true
dotnet_diagnostic.IDE0037.severity = suggestion

# Use conditional expression for assignment (IDE0045) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0045
dotnet_style_prefer_conditional_expression_over_assignment = true
dotnet_diagnostic.IDE0045.severity = suggestion

# Use conditional expression for return (IDE0046) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0046
dotnet_style_prefer_conditional_expression_over_return = true
dotnet_diagnostic.IDE0046.severity = suggestion

# Convert anonymous type to tuple (IDE0050) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0050
dotnet_diagnostic.IDE0050.severity = silent

# Use compound assignment (IDE0054 and IDE0074) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0054-ide0074
dotnet_style_prefer_compound_assignment = true
dotnet_diagnostic.IDE0054.severity = suggestion
dotnet_diagnostic.IDE0074.severity = suggestion

# Use 'System.HashCode.Combine' (IDE0070) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0070
dotnet_diagnostic.IDE0070.severity = suggestion

# Simplify interpolation (IDE0071) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0071
dotnet_style_prefer_simplified_interpolation = true
dotnet_diagnostic.IDE0071.severity = suggestion

# Add missing cases to switch expression (IDE0072) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0072
dotnet_diagnostic.IDE0072.severity = silent

# Simplify conditional expression (IDE0075) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0075
dotnet_style_prefer_simplified_boolean_expressions = true
dotnet_diagnostic.IDE0075.severity = suggestion

# Convert typeof to nameof (IDE0082) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0082
dotnet_diagnostic.IDE0082.severity = silent

########################################################################################################################
# Code style rules - Language rules - Null-checking preferences                                                        #
# https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/null-checking-preferences                   #
########################################################################################################################
# Use coalesce expression (IDE0029 and IDE0030) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0029-ide0030
dotnet_style_coalesce_expression = true
dotnet_diagnostic.IDE0029.severity = suggestion
dotnet_diagnostic.IDE0030.severity = suggestion

# Use null propagation (IDE0031) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0031
dotnet_style_null_propagation = true
dotnet_diagnostic.IDE0031.severity = suggestion

# Use is null check (IDE0041) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0041
dotnet_style_prefer_is_null_check_over_reference_equality_method = true
dotnet_diagnostic.IDE0041.severity = suggestion

########################################################################################################################
# Code style rules - Unnecessary code rules                                                                            #
# https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/unnecessary-code-rules                      #
########################################################################################################################
# Simplify name (IDE0001) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0001
dotnet_diagnostic.IDE0001.severity = silent

# Simplify member access (IDE0002) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0002
dotnet_diagnostic.IDE0002.severity = silent

# Remove unnecessary cast (IDE0004) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0004
dotnet_diagnostic.IDE0004.severity = silent

# Remove unnecessary import (IDE0005) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0005
dotnet_diagnostic.IDE0005.severity = error

# Remove unreachable code (IDE0035) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0035
dotnet_diagnostic.IDE0035.severity = error

# Remove unused private member (IDE0051) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0051
dotnet_diagnostic.IDE0051.severity = error

# Remove unread private member (IDE0052) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0052
dotnet_diagnostic.IDE0052.severity = warning

# Remove unused parameter (IDE0060) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0060
dotnet_code_quality_unused_parameters = all
dotnet_diagnostic.IDE0060.severity = suggestion

# Remove unnecessary suppression (IDE0079) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0079
dotnet_remove_unnecessary_suppression_exclusions = none
dotnet_diagnostic.IDE0079.severity = warning

# Remove unnecessary suppression operator (IDE0080) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0080
dotnet_diagnostic.IDE0080.severity = silent

# Remove unnecessary equality operator (IDE0100) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0100
dotnet_diagnostic.IDE0100.severity = suggestion

# Remove unnecessary discard (IDE0110) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0110
dotnet_diagnostic.IDE0110.severity = silent

########################################################################################################################
# Code style rules - Miscellaneous rules                                                                               #
# https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/miscellaneous-rules                         #
########################################################################################################################
# Remove invalid global 'SuppressMessageAttribute' (IDE0076) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0076
dotnet_diagnostic.IDE0076.severity = suggestion

# Avoid legacy format target in global 'SuppressMessageAttribute' (IDE0077) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0077
dotnet_diagnostic.IDE0077.severity = suggestion

########################################################################################################################
# Code style rules - Formatting rules (IDE0055)                                                                        #
# https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/formatting-rules                            #
########################################################################################################################
dotnet_diagnostic.IDE0055.severity = error

########################################################################################################################
# Code style rules - Formatting rules (IDE0055) - .NET formatting rules                                                #
# https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/formatting-rules#net-formatting-rules       #
########################################################################################################################
dotnet_sort_system_directives_first = true
dotnet_separate_import_directive_groups = true
dotnet_style_namespace_match_folder = true

########################################################################################################################
# Code style rules - Naming rules                                                                                      #
# https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/naming-rules                                #
########################################################################################################################
# Code Rule ID: IDE1006 (Naming rule violation) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/naming-rules#rule-id-ide1006-naming-rule-violation
dotnet_diagnostic.IDE1006.severity = error

########################################################################################################################
# Code style rules - Naming rules - Style Definitions                                                                  #
########################################################################################################################
dotnet_naming_style.pascal_case.required_prefix =
dotnet_naming_style.pascal_case.required_suffix =
dotnet_naming_style.pascal_case.word_separator =
dotnet_naming_style.pascal_case.capitalization = pascal_case

dotnet_naming_style.camel_case.required_prefix =
dotnet_naming_style.camel_case.required_suffix =
dotnet_naming_style.camel_case.word_separator =
dotnet_naming_style.camel_case.capitalization = camel_case

dotnet_naming_style.begins_with_i.required_prefix = I
dotnet_naming_style.begins_with_i.required_suffix =
dotnet_naming_style.begins_with_i.word_separator =
dotnet_naming_style.begins_with_i.capitalization = pascal_case

dotnet_naming_style.begin_with_t.required_prefix = T
dotnet_naming_style.begin_with_t.required_suffix =
dotnet_naming_style.begin_with_t.word_separator =
dotnet_naming_style.begin_with_t.capitalization = pascal_case

dotnet_naming_style.begins_with_underscore.required_prefix = _
dotnet_naming_style.begins_with_underscore.required_suffix =
dotnet_naming_style.begins_with_underscore.word_separator =
dotnet_naming_style.begins_with_underscore.capitalization = camel_case

########################################################################################################################
# Code style rules - Naming rules - Concrete rules                                                                     #
########################################################################################################################
# Namespaces and types
dotnet_naming_symbols.namespaces_and_types.applicable_kinds = namespace, class, struct, enum
dotnet_naming_symbols.namespaces_and_types.applicable_accessibilities = *
dotnet_naming_symbols.namespaces_and_types.required_modifiers =

dotnet_naming_rule.types_should_be_pascal_case.symbols = namespaces_and_types
dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case
dotnet_naming_rule.types_should_be_pascal_case.severity = error

# Interfaces
dotnet_naming_symbols.interfaces.applicable_kinds = interface
dotnet_naming_symbols.interfaces.applicable_accessibilities = *
dotnet_naming_symbols.interfaces.required_modifiers =

dotnet_naming_rule.interface_should_begin_with_i.symbols = interfaces
dotnet_naming_rule.interface_should_begin_with_i.style = begins_with_i
dotnet_naming_rule.interface_should_begin_with_i.severity = error

# Non field members
dotnet_naming_symbols.non_field_members.applicable_kinds = method, property, event, local_function
dotnet_naming_symbols.non_field_members.applicable_accessibilities = *
dotnet_naming_symbols.non_field_members.required_modifiers =

dotnet_naming_rule.non_field_members_should_be_pascal_case.symbols = non_field_members
dotnet_naming_rule.non_field_members_should_be_pascal_case.style = pascal_case
dotnet_naming_rule.non_field_members_should_be_pascal_case.severity = error

# Parameters
dotnet_naming_symbols.parameters.applicable_kinds = parameter
dotnet_naming_symbols.parameters.applicable_accessibilities = *
dotnet_naming_symbols.parameters.required_modifiers = 

dotnet_naming_rule.parameters_should_be_camel_case.symbols = parameters
dotnet_naming_rule.parameters_should_be_camel_case.style = camel_case
dotnet_naming_rule.parameters_should_be_camel_case.severity = error

# Type parameters
dotnet_naming_symbols.type_parameters.applicable_kinds = type_parameter
dotnet_naming_symbols.type_parameters.applicable_accessibilities = *
dotnet_naming_symbols.type_parameters.required_modifiers = 

dotnet_naming_rule.type_parameters_should_be_begin_with_t.symbols = type_parameters
dotnet_naming_rule.type_parameters_should_be_begin_with_t.style = begin_with_t
dotnet_naming_rule.type_parameters_should_be_begin_with_t.severity = error

# Constants
dotnet_naming_symbols.constants.applicable_kinds = field, local
dotnet_naming_symbols.constants.applicable_accessibilities = *
dotnet_naming_symbols.constants.required_modifiers = const

dotnet_naming_rule.constants_should_be_pascal_case.symbols = constants
dotnet_naming_rule.constants_should_be_pascal_case.style = pascal_case
dotnet_naming_rule.constants_should_be_pascal_case.severity = error

# Private fields
dotnet_naming_symbols.private_fields.applicable_kinds = field
dotnet_naming_symbols.private_fields.applicable_accessibilities = private
dotnet_naming_symbols.private_fields.required_modifiers = 

dotnet_naming_rule.private_fields_should_begin_with_underscore.symbols = private_fields
dotnet_naming_rule.private_fields_should_begin_with_underscore.style = begins_with_underscore
dotnet_naming_rule.private_fields_should_begin_with_underscore.severity = error

# Private static fields
dotnet_naming_symbols.private_static_fields.applicable_kinds = field
dotnet_naming_symbols.private_static_fields.applicable_accessibilities = private
dotnet_naming_symbols.private_static_fields.required_modifiers = static

dotnet_naming_rule.private_static_fields_should_be_pascal_case.symbols = private_static_fields
dotnet_naming_rule.private_static_fields_should_be_pascal_case.style = pascal_case
dotnet_naming_rule.private_static_fields_should_be_pascal_case.severity = error

# Private static readonly fields
dotnet_naming_symbols.private_static_readonly_fields.applicable_kinds = field
dotnet_naming_symbols.private_static_readonly_fields.applicable_accessibilities = private
dotnet_naming_symbols.private_static_readonly_fields.required_modifiers = static, readonly

dotnet_naming_rule.private_static_readonly_fields_should_be_pascal_case.symbols = private_static_readonly_fields
dotnet_naming_rule.private_static_readonly_fields_should_be_pascal_case.style = pascal_case
dotnet_naming_rule.private_static_readonly_fields_should_be_pascal_case.severity = error

# Locals
dotnet_naming_symbols.locals.applicable_kinds = local
dotnet_naming_symbols.locals.applicable_accessibilities = *
dotnet_naming_symbols.locals.required_modifiers = 

dotnet_naming_rule.locals_should_be_camel_case.symbols = locals
dotnet_naming_rule.locals_should_be_camel_case.style = camel_case
dotnet_naming_rule.locals_should_be_camel_case.severity = error


########################################################################################################################
# Code style rules - Bisher ohne Dokumentation                                                                         #
########################################################################################################################
dotnet_style_operator_placement_when_wrapping = beginning_of_line

########################################################################################################################
# StyleCop                                                                                                             #
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/DOCUMENTATION.md                                    #
########################################################################################################################

########################################################################################################################
# StyleCop - Special Rules (SA0000-)                                                                                   #
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SpecialRules.md                       #
########################################################################################################################
# SA0001: XML comment analysis disabled https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA0001.md
dotnet_diagnostic.SA0001.severity = none
# SA0002: Invalid settings file https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA0002.md
dotnet_diagnostic.SA0002.severity = warning

########################################################################################################################
# StyleCop - Spacing Rules (SA1000-)                                                                                   #
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SpacingRules.md                       #
########################################################################################################################
# SA1000: Keywords should be spaced correctly https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1000.md
dotnet_diagnostic.SA1000.severity = error
# SA1001: Commas should be spaced correctly https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1001.md
dotnet_diagnostic.SA1001.severity = error
# SA1002: Semicolons should be spaced correctly https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1002.md
dotnet_diagnostic.SA1002.severity = error
# SA1003: Symbols should be spaced correctly https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1003.md
dotnet_diagnostic.SA1003.severity = error
# SA1004: Documentation lines should begin with single space https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1004.md
dotnet_diagnostic.SA1004.severity = error
# SA1005: Single line comments should begin with single space https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1005.md
dotnet_diagnostic.SA1005.severity = error
# SA1006: Preprocessor keywords should not be preceded by space https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1006.md
dotnet_diagnostic.SA1006.severity = error
# SA1007: Operator keyword should be followed by space https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1007.md
dotnet_diagnostic.SA1007.severity = error
# SA1008: Opening parenthesis should be spaced correctly https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1008.md
dotnet_diagnostic.SA1008.severity = error
# SA1009: Closing parenthesis should be spaced correctly https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1009.md
dotnet_diagnostic.SA1009.severity = error
# SA1010: Opening square brackets should be spaced correctly https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1010.md
dotnet_diagnostic.SA1010.severity = error
# SA1011: Closing square brackets should be spaced correctly https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1011.md
dotnet_diagnostic.SA1011.severity = error
# SA1012: Opening braces should be spaced correctly https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1012.md
dotnet_diagnostic.SA1012.severity = error
# SA1013: Closing braces should be spaced correctly https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1013.md
dotnet_diagnostic.SA1013.severity = error
# SA1014: Opening generic brackets should be spaced correctly https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1014.md
dotnet_diagnostic.SA1014.severity = error
# SA1015: Closing generic brackets should be spaced correctly https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1015.md
dotnet_diagnostic.SA1015.severity = error
# SA1016: Opening attribute brackets should be spaced correctly https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1016.md
dotnet_diagnostic.SA1016.severity = error
# SA1017: Closing attribute brackets should be spaced correctly https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1017.md
dotnet_diagnostic.SA1017.severity = error
# SA1018: Nullable type symbols should be spaced correctly https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1018.md
dotnet_diagnostic.SA1018.severity = error
# SA1019: Member access symbols should be spaced correctly https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1019.md
dotnet_diagnostic.SA1019.severity = error
# SA1020: Increment decrement symbols should be spaced correctly https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1020.md
dotnet_diagnostic.SA1020.severity = error
# SA1021: Negative signs should be spaced correctly https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1021.md
dotnet_diagnostic.SA1021.severity = error
# SA1022: Positive signs should be spaced correctly https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1022.md
dotnet_diagnostic.SA1022.severity = error
# SA1023: Dereference and access of symbols should be spaced correctly https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1023.md
dotnet_diagnostic.SA1023.severity = error
# SA1024: Colons should be spaced correctly https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1024.md
dotnet_diagnostic.SA1024.severity = error
# SA1025: Code should not contain multiple whitespace in a row https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1025.md
dotnet_diagnostic.SA1025.severity = error
# SA1026: Code should not contain space after new or stackalloc keyword in implicitly typed array allocation https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1026.md
dotnet_diagnostic.SA1026.severity = error
# SA1027: Use tabs correctly https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1027.md
dotnet_diagnostic.SA1027.severity = none
# SA1028: Code should not contain trailing whitespace https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1028.md
dotnet_diagnostic.SA1028.severity = error

########################################################################################################################
# StyleCop - Readability Rules (SA1100-)                                                                               #
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/ReadabilityRules.md                   #
########################################################################################################################
# SA1100: Do not prefix calls with base unless local implementation exists https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1100.md
dotnet_diagnostic.SA1100.severity = error
# SA1101: Prefix local calls with this https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1101.md
dotnet_diagnostic.SA1101.severity = none
# SA1102: Query clause should follow previous clause https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1102.md
dotnet_diagnostic.SA1102.severity = error
# SA1103: Query clauses should be on separate lines or all on one line https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1103.md
dotnet_diagnostic.SA1103.severity = error
# SA1104: Query clause should begin on new line when previous clause spans multiple lines https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1104.md
dotnet_diagnostic.SA1104.severity = error
# SA1105: Query clauses spanning multiple lines should begin on own line https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1105.md
dotnet_diagnostic.SA1105.severity = error
# SA1106: Code should not contain empty statements https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1106.md
dotnet_diagnostic.SA1106.severity = error
# SA1107: Code should not contain multiple statements on one line https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1107.md
dotnet_diagnostic.SA1107.severity = error
# SA1108: Block statements should not contain embedded comments https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1108.md
dotnet_diagnostic.SA1108.severity = error
# SA1109: Block statements should not contain embedded regions https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1109.md
dotnet_diagnostic.SA1109.severity = error
# SA1110: Opening parenthesis or bracket should be on declaration line https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1110.md
dotnet_diagnostic.SA1110.severity = error
# SA1111: Closing parenthesis should be on line of last parameter https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1111.md
dotnet_diagnostic.SA1111.severity = error
# SA1112: Closing parenthesis should be on line of opening parenthesis https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1112.md
dotnet_diagnostic.SA1112.severity = error
# SA1113: Comma should be on the same line as previous parameter https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1113.md
dotnet_diagnostic.SA1113.severity = error
# SA1114: Parameter list should follow declaration https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1114.md
dotnet_diagnostic.SA1114.severity = error
# SA1115: Parameter should follow comma https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1115.md
dotnet_diagnostic.SA1115.severity = error
# SA1116: Split parameters should start on line after declaration https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1116.md
dotnet_diagnostic.SA1116.severity = error
# SA1117: Parameters should be on same line or separate lines https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1117.md
dotnet_diagnostic.SA1117.severity = error
# SA1118: Parameter should not span multiple lines https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1118.md
dotnet_diagnostic.SA1118.severity = warning
# SA1120: Comments should contain text https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1120.md
dotnet_diagnostic.SA1120.severity = error
# SA1121: Use built-in type alias https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1121.md
dotnet_diagnostic.SA1121.severity = error
# SA1122: Use string.Empty for empty strings https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1122.md
dotnet_diagnostic.SA1122.severity = error
# SA1123: Do not place regions within elements https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1123.md
dotnet_diagnostic.SA1123.severity = error
# SA1124: Do not use regions https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1124.md
dotnet_diagnostic.SA1124.severity = error
# SA1125: Use shorthand for nullable types https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1125.md
dotnet_diagnostic.SA1125.severity = error
# SA1126: Prefix calls correctly https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1126.md
dotnet_diagnostic.SA1126.severity = error
# SA1127: Generic type constraints should be on their own line https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1127.md
dotnet_diagnostic.SA1127.severity = error
# SA1128: Put constructor initializers on their own line https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1128.md
dotnet_diagnostic.SA1128.severity = error
# SA1129: Do not use default value type constructor https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1129.md
dotnet_diagnostic.SA1129.severity = warning
# SA1130: Use lambda syntax https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1130.md
dotnet_diagnostic.SA1130.severity = error
# SA1131: Use readable conditions https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1131.md
dotnet_diagnostic.SA1131.severity = error
# SA1132: Do not combine fields https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1132.md
dotnet_diagnostic.SA1132.severity = error
# SA1133: Do not combine attributes https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1133.md
dotnet_diagnostic.SA1133.severity = error
# SA1134: Attributes should not share line https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1134.md
dotnet_diagnostic.SA1134.severity = error
# SA1135: Using directives should be qualified https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1135.md
dotnet_diagnostic.SA1135.severity = error
# SA1136: Enum values should be on separate lines https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1136.md
dotnet_diagnostic.SA1136.severity = error
# SA1137: Elements should have the same indentation https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1137.md
dotnet_diagnostic.SA1137.severity = error
# SA1139: Use literal suffix notation instead of casting https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1139.md
dotnet_diagnostic.SA1139.severity = error
# SA1141: Use tuple syntax https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1141.md
dotnet_diagnostic.SA1141.severity = error
# SA1142: Refer to tuple elements by name https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1142.md
dotnet_diagnostic.SA1142.severity = error
# SX1101: Do not prefix local calls with 'this.' https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SX1101.md
dotnet_diagnostic.SX1101.severity = error

########################################################################################################################
# StyleCop - Ordering Rules (SA1200-)                                                                                  #
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/OrderingRules.md                      #
########################################################################################################################
# SA1200: Using directives should be placed correctly https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1200.md
dotnet_diagnostic.SA1200.severity = error
# SA1201: Elements should appear in the correct order https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1201.md
dotnet_diagnostic.SA1201.severity = error
# SA1202: Elements should be ordered by access https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1202.md
dotnet_diagnostic.SA1202.severity = warning
# SA1203: Constants should appear before fields https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1203.md
dotnet_diagnostic.SA1203.severity = warning
# SA1204: Static elements should appear before instance elements https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1204.md
dotnet_diagnostic.SA1204.severity = warning
# SA1205: Partial elements should declare access https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1205.md
dotnet_diagnostic.SA1205.severity = error
# SA1206: Declaration keywords should follow order https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1206.md
dotnet_diagnostic.SA1206.severity = error
# SA1207: Protected should come before internal https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1207.md
dotnet_diagnostic.SA1207.severity = warning
# SA1208: System using directives should be placed before other using directives https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1208.md
dotnet_diagnostic.SA1208.severity = error
# SA1209: Using alias directives should be placed after other using directives https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1209.md
dotnet_diagnostic.SA1209.severity = error
# SA1210: Using directives should be ordered alphabetically by namespace https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1210.md
dotnet_diagnostic.SA1210.severity = error
# SA1211: Using alias directives should be ordered alphabetically by alias name https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1211.md
dotnet_diagnostic.SA1211.severity = error
# SA1212: Property accessors should follow order https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1212.md
dotnet_diagnostic.SA1212.severity = error
# SA1213: Event accessors should follow order https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1213.md
dotnet_diagnostic.SA1213.severity = error
# SA1214: Readonly fields should appear before non-readonly fields https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1214.md
dotnet_diagnostic.SA1214.severity = error
# SA1216: Using static directives should be placed at the correct location https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1216.md
dotnet_diagnostic.SA1216.severity = error
# SA1217: Using static directives should be ordered alphabetically https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1217.md
dotnet_diagnostic.SA1217.severity = error

########################################################################################################################
# StyleCop - Naming Rules (SA1300-)                                                                                    #
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/NamingRules.md                        #
########################################################################################################################
# SA1300: Element should begin with upper-case letter https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1300.md
dotnet_diagnostic.SA1300.severity = error
# SA1301: Element should begin with lower-case letter https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1301.md
dotnet_diagnostic.SA1301.severity = none
# SA1302: Interface names should begin with I https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1302.md
dotnet_diagnostic.SA1302.severity = error
# SA1303: Const field names should begin with upper-case letter https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1303.md
dotnet_diagnostic.SA1303.severity = error
# SA1304: Non-private readonly fields should begin with upper-case letter https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1304.md
dotnet_diagnostic.SA1304.severity = error
# SA1305: Field names should not use Hungarian notation https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1305.md
dotnet_diagnostic.SA1305.severity = error
# SA1306: Field names should begin with lower-case letter https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1306.md
dotnet_diagnostic.SA1306.severity = none
# SA1307: Accessible fields should begin with upper-case letter https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1307.md
dotnet_diagnostic.SA1307.severity = error
# SA1308: Variable names should not be prefixed https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1308.md
dotnet_diagnostic.SA1308.severity = error
# SA1309: Field names should not begin with underscore https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1309.md
dotnet_diagnostic.SA1309.severity = none
# SA1310: Field names should not contain underscore https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1310.md
dotnet_diagnostic.SA1310.severity = error
# SA1311: Static readonly fields should begin with upper-case letter https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1311.md
dotnet_diagnostic.SA1311.severity = error
# SA1312: Variable names should begin with lower-case letter https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1312.md
dotnet_diagnostic.SA1312.severity = error
# SA1313: Parameter names should begin with lower-case letter https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1313.md
dotnet_diagnostic.SA1313.severity = error
# SA1314: Type parameter names should begin with T https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1314.md
dotnet_diagnostic.SA1314.severity = error
# SA1316: Tuple element names should use correct casing https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1316.md
dotnet_diagnostic.SA1316.severity = error
# SX1309: Field names should begin with underscore https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SX1309.md
dotnet_diagnostic.SX1309.severity = error
# SX1309S: Static field names should begin with underscore https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SX1309S.md
dotnet_diagnostic.SX1309S.severity = none

########################################################################################################################
# StyleCop - Maintainability Rules (SA1400-)                                                                           #
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/MaintainabilityRules.md               #
########################################################################################################################
# SA1119: Statement should not use unnecessary parenthesis https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1119.md
dotnet_diagnostic.SA1119.severity = error
# SA1400: Access modifier should be declared https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1400.md
dotnet_diagnostic.SA1400.severity = error
# SA1401: Fields should be private https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1401.md
dotnet_diagnostic.SA1401.severity = warning
# SA1402: File may only contain a single type https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1402.md
dotnet_diagnostic.SA1402.severity = warning
# SA1403: File may only contain a single namespace https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1403.md
dotnet_diagnostic.SA1403.severity = warning
# SA1404: Code analysis suppression should have justification https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1404.md
dotnet_diagnostic.SA1404.severity = error
# SA1405: Debug.Assert should provide message text https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1405.md
dotnet_diagnostic.SA1405.severity = error
# SA1406: Debug.Fail should provide message text https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1406.md
dotnet_diagnostic.SA1406.severity = error
# SA1407: Arithmetic expressions should declare precedence https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1407.md
dotnet_diagnostic.SA1407.severity = warning
# SA1408: Conditional expressions should declare precedence https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1408.md
dotnet_diagnostic.SA1408.severity = warning
# SA1409: Remove unnecessary code https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1409.md
dotnet_diagnostic.SA1409.severity = none
# SA1410: Remove delegate parenthesis when possible https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1410.md
dotnet_diagnostic.SA1410.severity = warning
# SA1411: Attribute constructor should not use unnecessary parenthesis https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1411.md
dotnet_diagnostic.SA1411.severity = error
# SA1412: Store files as UTF-8 with byte order mark https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1412.md
dotnet_diagnostic.SA1412.severity = error
# SA1413: Use trailing comma in multi-line initializers https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1413.md
dotnet_diagnostic.SA1413.severity = none
# SA1414: Tuple types in signatures should have element names https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1414.md
dotnet_diagnostic.SA1414.severity = error

########################################################################################################################
# StyleCop - Layout Rules (SA1500-)                                                                                    #
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/LayoutRules.md                        #
########################################################################################################################
# SA1500: Braces for multi-line statements should not share line https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1500.md
dotnet_diagnostic.SA1500.severity = error
# SA1501: Statement should not be on a single line https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1501.md
dotnet_diagnostic.SA1501.severity = warning
# SA1502: Element should not be on a single line https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1502.md
dotnet_diagnostic.SA1502.severity = warning
# SA1503: Braces should not be omitted https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1503.md
dotnet_diagnostic.SA1503.severity = error
# SA1504: All accessors should be single-line or multi-line https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1504.md
dotnet_diagnostic.SA1504.severity = error
# SA1505: Opening braces should not be followed by blank line https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1505.md
dotnet_diagnostic.SA1505.severity = error
# SA1506: Element documentation headers should not be followed by blank line https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1506.md
dotnet_diagnostic.SA1506.severity = error
# SA1507: Code should not contain multiple blank lines in a row https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1507.md
dotnet_diagnostic.SA1507.severity = error
# SA1508: Closing braces should not be preceded by blank line https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1508.md
dotnet_diagnostic.SA1508.severity = error
# SA1509: Opening braces should not be preceded by blank line https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1509.md
dotnet_diagnostic.SA1509.severity = error
# SA1510: Chained statement blocks should not be preceded by blank line https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1510.md
dotnet_diagnostic.SA1510.severity = error
# SA1511: While-do footer should not be preceded by blank line https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1511.md
dotnet_diagnostic.SA1511.severity = error
# SA1512: Single-line comments should not be followed by blank line https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1512.md
dotnet_diagnostic.SA1512.severity = error
# SA1513: Closing brace should be followed by blank line https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1513.md
dotnet_diagnostic.SA1513.severity = error
# SA1514: Element documentation header should be preceded by blank line https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1514.md
dotnet_diagnostic.SA1514.severity = error
# SA1515: Single-line comment should be preceded by blank line https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1515.md
dotnet_diagnostic.SA1515.severity = error
# SA1516: Elements should be separated by blank line https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1516.md
dotnet_diagnostic.SA1516.severity = error
# SA1517: Code should not contain blank lines at start of file https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1517.md
dotnet_diagnostic.SA1517.severity = error
# SA1518: Use line endings correctly at end of file https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1518.md
dotnet_diagnostic.SA1518.severity = error
# SA1519: Braces should not be omitted from multi-line child statement https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1519.md
dotnet_diagnostic.SA1519.severity = error
# SA1520: Use braces consistently https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1520.md
dotnet_diagnostic.SA1520.severity = error

########################################################################################################################
# StyleCop - Documentation Rules (SA1600-)                                                                             #
# https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/DocumentationRules.md                 #
########################################################################################################################
# SA1600: Elements should be documented https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1600.md
dotnet_diagnostic.SA1600.severity = none
# SA1601: Partial elements should be documented https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1601.md
dotnet_diagnostic.SA1601.severity = none
# SA1602: Enumeration items should be documented https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1602.md
dotnet_diagnostic.SA1602.severity = none
# SA1603: Documentation should contain valid XML https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1603.md
dotnet_diagnostic.SA1603.severity = warning
# SA1604: Element documentation should have summary https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1604.md
dotnet_diagnostic.SA1604.severity = none
# SA1605: Partial element documentation should have summary https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1605.md
dotnet_diagnostic.SA1605.severity = none
# SA1606: Element documentation should have summary text https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1606.md
dotnet_diagnostic.SA1606.severity = none
# SA1607: Partial element documentation should have summary text https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1607.md
dotnet_diagnostic.SA1607.severity = none
# SA1608: Element documentation should not have default summary https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1608.md
dotnet_diagnostic.SA1608.severity = none
# SA1609: Property documentation should have value https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1609.md
dotnet_diagnostic.SA1609.severity = none
# SA1610: Property documentation should have value text https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1610.md
dotnet_diagnostic.SA1610.severity = none
# SA1611: Element parameters should be documented https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1611.md
dotnet_diagnostic.SA1611.severity = none
# SA1612: Element parameter documentation should match element parameters https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1612.md
dotnet_diagnostic.SA1612.severity = none
# SA1613: Element parameter documentation should declare parameter name https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1613.md
dotnet_diagnostic.SA1613.severity = none
# SA1614: Element parameter documentation should have text https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1614.md
dotnet_diagnostic.SA1614.severity = none
# SA1615: Element return value should be documented https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1615.md
dotnet_diagnostic.SA1615.severity = none
# SA1616: Element return value documentation should have text https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1616.md
dotnet_diagnostic.SA1616.severity = none
# SA1617: Void return value should not be documented https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1617.md
dotnet_diagnostic.SA1617.severity = warning
# SA1618: Generic type parameters should be documented https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1618.md
dotnet_diagnostic.SA1618.severity = none
# SA1619: Generic type parameters should be documented partial class https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1619.md
dotnet_diagnostic.SA1619.severity = none
# SA1620: Generic type parameter documentation should match type parameters https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1620.md
dotnet_diagnostic.SA1620.severity = warning
# SA1621: Generic type parameter documentation should declare parameter name https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1621.md
dotnet_diagnostic.SA1621.severity = warning
# SA1622: Generic type parameter documentation should have text https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1622.md
dotnet_diagnostic.SA1622.severity = warning
# SA1623: Property summary documentation should match accessors https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1623.md
dotnet_diagnostic.SA1623.severity = none
# SA1624: Property summary documentation should omit accessor with restricted access https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1624.md
dotnet_diagnostic.SA1624.severity = none
# SA1625: Element documentation should not be copied and pasted https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1625.md
dotnet_diagnostic.SA1625.severity = warning
# SA1626: Single-line comments should not use documentation style slashes https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1626.md
dotnet_diagnostic.SA1626.severity = warning
# SA1627: Documentation text should not be empty https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1627.md
dotnet_diagnostic.SA1627.severity = warning
# SA1628: Documentation text should begin with a capital letter https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1628.md
dotnet_diagnostic.SA1628.severity = none
# SA1629: Documentation text should end with a period https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1629.md
dotnet_diagnostic.SA1629.severity = none
# SA1630: Documentation text should contain whitespace https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1630.md
dotnet_diagnostic.SA1630.severity = none
# SA1631: Documentation should meet character percentage https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1631.md
dotnet_diagnostic.SA1631.severity = none
# SA1632: Documentation text should meet minimum character length https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1632.md
dotnet_diagnostic.SA1632.severity = none
# SA1633: File should have header https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1633.md
dotnet_diagnostic.SA1633.severity = none
# SA1634: File header should show copyright https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1634.md
dotnet_diagnostic.SA1634.severity = none
# SA1635: File header should have copyright text https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1635.md
dotnet_diagnostic.SA1635.severity = none
# SA1636: File header copyright text should match https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1636.md
dotnet_diagnostic.SA1636.severity = none
# SA1637: File header should contain file name https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1637.md
dotnet_diagnostic.SA1637.severity = none
# SA1638: File header file name documentation should match file name https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1638.md
dotnet_diagnostic.SA1638.severity = none
# SA1639: File header should have summary https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1639.md
dotnet_diagnostic.SA1639.severity = none
# SA1640: File header should have valid company text https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1640.md
dotnet_diagnostic.SA1640.severity = none
# SA1641: File header company name text should match https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1641.md
dotnet_diagnostic.SA1641.severity = none
# SA1642: Constructor summary documentation should begin with standard text https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1642.md
dotnet_diagnostic.SA1642.severity = none
# SA1643: Destructor summary documentation should begin with standard text https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1643.md
dotnet_diagnostic.SA1643.severity = none
# SA1644: Documentation headers should not contain blank lines https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1644.md
dotnet_diagnostic.SA1644.severity = none
# SA1645: Included documentation file does not exist https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1645.md
dotnet_diagnostic.SA1645.severity = none
# SA1646: Included documentation XPath does not exist https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1646.md
dotnet_diagnostic.SA1646.severity = none
# SA1647: Include node does not contain valid file and path https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1647.md
dotnet_diagnostic.SA1647.severity = none
# SA1648: Inheritdoc should be used with inheriting class https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1648.md
dotnet_diagnostic.SA1648.severity = warning
# SA1649: File name should match first type name https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1649.md
dotnet_diagnostic.SA1649.severity = error
# SA1650: Element documentation should be spelled correctly https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1650.md
dotnet_diagnostic.SA1650.severity = none
# SA1651: Do not use placeholder elements https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1651.md
dotnet_diagnostic.SA1651.severity = warning


########################################################################################################################
# C# Coding Conventions                                                                                                #
########################################################################################################################
[*.cs]
########################################################################################################################
# Code style rules                                                                                                     #
# https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/                                            #
########################################################################################################################

########################################################################################################################
# Code style rules - Language rules                                                                                    #
# https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/language-rules                              #
########################################################################################################################
# Code style rules - 'var' preferences (IDE0007 and IDE0008) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0007-ide0008
csharp_style_var_for_built_in_types = true
csharp_style_var_when_type_is_apparent = true
csharp_style_var_elsewhere = true
dotnet_diagnostic.IDE0007.severity = error
dotnet_diagnostic.IDE0008.severity = none

# Code style rules - 'using' directive placement (IDE0065) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0065
# Using directive options https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/formatting-rules#using-directive-options
csharp_using_directive_placement = inside_namespace
dotnet_diagnostic.IDE0065.severity = error

########################################################################################################################
# Code style rules - Language rules - Modifier preferences                                                             #
# https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/modifier-preferences                        #
########################################################################################################################
# Order modifiers (IDE0036) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0036
csharp_preferred_modifier_order = public, private, protected, internal, static, extern, new, virtual, abstract, sealed, override, readonly, unsafe, volatile, async:warning

# Make local function static (IDE0062) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0062
csharp_prefer_static_local_function = true
dotnet_diagnostic.IDE0062.severity = suggestion

########################################################################################################################
# Code style rules - Language rules - Expression-level preferences                                                     #
# https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/expression-level-preferences                #
########################################################################################################################
# Inline variable declaration (IDE0018) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0018
csharp_style_inlined_variable_declaration = true
dotnet_diagnostic.IDE0018.severity = suggestion

# Simplify 'default' expression (IDE0034) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0034
csharp_prefer_simple_default_expression = true
dotnet_diagnostic.IDE0034.severity = suggestion

# Use local function instead of lambda (IDE0039) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0039
csharp_style_pattern_local_over_anonymous_function = true
dotnet_diagnostic.IDE0039.severity = suggestion

# Deconstruct variable declaration (IDE0042) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0042
csharp_style_deconstructed_variable_declaration = true
dotnet_diagnostic.IDE0042.severity = suggestion

# Use index operator (IDE0056) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0056
csharp_style_prefer_index_operator = true
dotnet_diagnostic.IDE0056.severity = suggestion

# Use range operator (IDE0057) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0057
csharp_style_prefer_range_operator = true
dotnet_diagnostic.IDE0057.severity = suggestion

# Simplify new expression (IDE0090) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0090
csharp_style_implicit_object_creation_when_type_is_apparent = true
dotnet_diagnostic.IDE0090.severity = suggestion

########################################################################################################################
# Code style rules - Language rules - Null-checking preferences                                                        #
# https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/null-checking-preferences                   #
########################################################################################################################
# Use throw expression (IDE0016) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0016
csharp_style_throw_expression = true
dotnet_diagnostic.IDE0016.severity = suggestion

# Use conditional delegate call (IDE1005) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide1005
csharp_style_conditional_delegate_call = true
dotnet_diagnostic.IDE1005.severity = suggestion

########################################################################################################################
# Code style rules - Language rules - Expression-bodied-members                                                        #
# https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/expression-bodied-members                   #
########################################################################################################################
# Use expression body for constructors (IDE0021) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0021
csharp_style_expression_bodied_constructors = true
dotnet_diagnostic.IDE0021.severity = suggestion

# Use expression body for methods (IDE0022) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0022
csharp_style_expression_bodied_methods = true
dotnet_diagnostic.IDE0022.severity = suggestion

# Use expression body for operators (IDE0023 and IDE0024) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0023-ide0024
csharp_style_expression_bodied_operators = true
dotnet_diagnostic.IDE0023.severity = suggestion
dotnet_diagnostic.IDE0024.severity = suggestion

# Use expression body for properties (IDE0025) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0025
csharp_style_expression_bodied_properties = true
dotnet_diagnostic.IDE0025.severity = suggestion

# Use expression body for indexers (IDE0026) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0026
csharp_style_expression_bodied_indexers = true
dotnet_diagnostic.IDE0026.severity = suggestion

# Use expression body for accessors (IDE0027) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0027
csharp_style_expression_bodied_accessors = true
dotnet_diagnostic.IDE0027.severity = suggestion

# Use expression body for lambdas (IDE0053) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0053
csharp_style_expression_bodied_lambdas = true
dotnet_diagnostic.IDE0053.severity = suggestion

# Use expression body for local functions (IDE0061) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0061
csharp_style_expression_bodied_local_functions = true
dotnet_diagnostic.IDE0061.severity = suggestion

########################################################################################################################
# Code style rules - Language rules - Pattern matching preferences                                                     #
# https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/pattern-matching-preferences                #
########################################################################################################################
# Use pattern matching to avoid 'as' followed by a 'null' check (IDE0019) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0019
csharp_style_pattern_matching_over_as_with_null_check = true
dotnet_diagnostic.IDE0019.severity = error

# Use pattern matching to avoid 'is' check followed by a cast (IDE0020 and IDE0038) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0020-ide0038
csharp_style_pattern_matching_over_is_with_cast_check = true
dotnet_diagnostic.IDE0020.severity = error
dotnet_diagnostic.IDE0038.severity = error

# Use switch expression (IDE0066) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0066
csharp_style_prefer_switch_expression = true
dotnet_diagnostic.IDE0066.severity = suggestion

# Use pattern matching (IDE0078) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0078
csharp_style_prefer_pattern_matching = true
dotnet_diagnostic.IDE0078.severity = suggestion

# Use pattern matching (not operator) (IDE0083) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0083
csharp_style_prefer_not_pattern = true
dotnet_diagnostic.IDE0083.severity = suggestion

########################################################################################################################
# Code style rules - Language rules - Code block preferences                                                           #
# https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/code-block-preferences                      #
########################################################################################################################
# Add braces (IDE0011) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0011
csharp_prefer_braces = true
dotnet_diagnostic.IDE0011.severity = warning

# Use simple 'using' statement (IDE0063) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0063
csharp_prefer_simple_using_statement = true
dotnet_diagnostic.IDE0063.severity = suggestion

########################################################################################################################
# Code style rules - Unnecessary code rules                                                                            #
# https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/unnecessary-code-rules                      #
########################################################################################################################
# Remove unnecessary expression value (IDE0058) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0058
csharp_style_unused_value_expression_statement_preference = discard_variable
dotnet_diagnostic.IDE0058.severity = suggestion

# Remove unnecessary value assignment (IDE0059) https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0059
csharp_style_unused_value_assignment_preference = discard_variable
dotnet_diagnostic.IDE0059.severity = suggestion

########################################################################################################################
# Code style rules - Formatting rules (IDE0055)                                                                        #
# https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/formatting-rules                            #
########################################################################################################################

########################################################################################################################
# Code style rules - Formatting rules (IDE0055) - C# formatting rules                                                  #
# https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/formatting-rules#c-formatting-rules         #
########################################################################################################################
# New-line options https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/formatting-rules#new-line-options
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true

# Indentation options https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/formatting-rules#indentation-options
csharp_indent_case_contents = true
csharp_indent_switch_labels = true
csharp_indent_labels = flush_left
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents_when_block = false

# Spacing options https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/formatting-rules#spacing-options
csharp_space_after_cast = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_between_parentheses = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_around_binary_operators = before_and_after
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_after_comma = true
csharp_space_before_comma = false
csharp_space_after_dot = false
csharp_space_before_dot = false
csharp_space_after_semicolon_in_for_statement = true
csharp_space_before_semicolon_in_for_statement = false
csharp_space_around_declaration_statements = false
csharp_space_before_open_square_brackets = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_square_brackets = false

# Wrap options https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/formatting-rules#wrap-options
csharp_preserve_single_line_statements = false
csharp_preserve_single_line_blocks = true

# Namespace options https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/formatting-rules#namespace-options
csharp_style_namespace_declarations = file_scoped
# IDE0160: Convert to block scoped namespace https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0160
dotnet_diagnostic.IDE0160.severity = none
# IDE0161: Convert to file-scoped namespace https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0161
dotnet_diagnostic.IDE0161.severity = error
# IDE0058	Expression value is never used https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/ide0058
dotnet_diagnostic.IDE0058.severity = none
