// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OData.Sample.WebApi.Infrastructure.Db;

#nullable disable

namespace OData.Sample.WebApi.Migrations
{
    [DbContext(typeof(ODataSampleContext))]
    partial class ODataSampleContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.10");

            modelBuilder.Entity("OData.Sample.WebApi.Domain.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CountryRegionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayNameGER")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<string>("EU")
                        .HasMaxLength(3)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<string>("EWR")
                        .HasMaxLength(3)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<string>("ISO2")
                        .HasMaxLength(10)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<string>("ISO3")
                        .HasMaxLength(10)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<string>("NameGER")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<int?>("WorldRegionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CountryRegionId");

                    b.HasIndex("WorldRegionId");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("OData.Sample.WebApi.Domain.Entities.CountryRegion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ISO")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<string>("NameGER")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<int?>("WorldRegionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("WorldRegionId");

                    b.ToTable("CountryRegions");
                });

            modelBuilder.Entity("OData.Sample.WebApi.Domain.Entities.WorldRegion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ISO")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<string>("NameGER")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("WorldRegions");
                });

            modelBuilder.Entity("OData.Sample.WebApi.Domain.Entities.Country", b =>
                {
                    b.HasOne("OData.Sample.WebApi.Domain.Entities.CountryRegion", "CountryRegion")
                        .WithMany("Countries")
                        .HasForeignKey("CountryRegionId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("OData.Sample.WebApi.Domain.Entities.WorldRegion", "WorldRegion")
                        .WithMany("Countries")
                        .HasForeignKey("WorldRegionId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CountryRegion");

                    b.Navigation("WorldRegion");
                });

            modelBuilder.Entity("OData.Sample.WebApi.Domain.Entities.CountryRegion", b =>
                {
                    b.HasOne("OData.Sample.WebApi.Domain.Entities.WorldRegion", "WorldRegion")
                        .WithMany("CountryRegions")
                        .HasForeignKey("WorldRegionId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("WorldRegion");
                });

            modelBuilder.Entity("OData.Sample.WebApi.Domain.Entities.CountryRegion", b =>
                {
                    b.Navigation("Countries");
                });

            modelBuilder.Entity("OData.Sample.WebApi.Domain.Entities.WorldRegion", b =>
                {
                    b.Navigation("Countries");

                    b.Navigation("CountryRegions");
                });
#pragma warning restore 612, 618
        }
    }
}
